knitr::opts_chunk$set(echo = TRUE)
traffic<- read.csv("data/pjm.csv")
pjm<- read.csv("data/pjm.csv")
str(pjm)
head(pjm)
pjm %<>%
mutate(datetime = ymd_hms(datetime))
pjm <- pjm %>%
mutate(datetime = ymd_hms(datetime))
#load the package
library(lubridate)
library(dplyr)
library(forecast)
library(ggplot2)
library(scales)
pjm<- read.csv("data/pjm.csv")
str(pjm)
pjm <- pjm %>%
mutate(datetime = ymd_hms(datetime))
ts_train<-pjm$cons %>% ts(freq= 24)
plot(decompose(ts_train))
ts_train %>%
tail(24*7*4) %>%
decompose() %>%
autoplot()
msts_traffic<-pjm$cons %>% msts( seasonal.periods = c(24, 24*7))
msts_traffic  %>% head(  24 *7 *4 ) %>% mstl() %>% autoplot()
msts_train <- pjm$cons %>% msts( seasonal.periods = c(24,24*7))
msts_test <- msts_train %>% tail(24*3)
stlm_model <- msts_train %>%
stlm(lambda = 0, biasadj = T) %>%
forecast(h = 24*3)
plot(stlm_model)
tbats_mod <- msts_train %>%
log() %>%
tbats(use.box.cox = FALSE)
msts_train <- head(ts_train, length(ts_train) - 24*7)
msts_test <- tail(ts_train, length(ts_train) - 24*7)
#subset to more recent period
msts_train <- tail(msts_train, 24*7*4*3)
autoplot(msts_train)
stlm_model <- msts_train %>%
stlm(lambda = 0, biasadj = T) %>%
forecast(h = 24*7)
plot(stlm_model)
tbats_mod <- msts_train %>%
log() %>%
tbats(use.box.cox = FALSE)
tbats_model <-  forecast(tbats_mod,h=24*7)
plot(tbats_model)
result<-rbind(accuracy(as.vector(stlm_model$mean) , msts_test),
accuracy(as.vector(exp(tbats_model$mean)) , msts_test))
length(stlm_model$mean)
length(msts_test)
msts_test <- tail(ts_train,  24*7)
length(stlm_model$mean)
length(msts_test)
result<-rbind(accuracy(as.vector(stlm_model$mean) , msts_test),
accuracy(as.vector(exp(tbats_model$mean)) , msts_test))
rownames(result) <- c("stlm_model","tbats_model")
result
accuracyData <- data.frame(datetime= traffic$datetime %>% tail(24*7),
actual = as.vector(msts_test) ,
stlmForecast = as.vector(stlm_model$mean) ,
tbatsForecast = as.vector(exp(tbats_model$mean))
)
accuracyData
accuracyData %>%
ggplot() +
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = (pjm$cons %>% tail(24*7)), colour = "actual"))+
geom_line(aes(x = (pjm$cons %>% tail(24*7)), y = stlm_model$mean, colour = "stlm"))+
geom_line(aes(x = (pjm$cons %>% tail(24*7)), y = exp(tbats_model$mean),   colour = "tbats "))+
scale_y_continuous(labels = comma)+
labs(
title = "Forecast from STLM and TBATS model",
y = "Number of Traffic",
x = "Date",
colour = ""
)
accuracyData %>%
ggplot() +
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = (pjm$cons %>% tail(24*7)), colour = "actual"))+
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = stlm_model$mean, colour = "stlm"))+
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = exp(tbats_model$mean),   colour = "tbats "))+
scale_y_continuous(labels = comma)+
labs(
title = "Forecast from STLM and TBATS model",
y = "Number of Traffic",
x = "Date",
colour = ""
)
stlm_model <- msts_train %>%
stlm(lambda = 0) %>%
forecast(h = 24*7)
plot(stlm_model)
tbats_mod <- msts_train %>%
log() %>%
tbats(use.box.cox = FALSE)
tbats_model <-  forecast(tbats_mod,h=24*7)
plot(tbats_model)
result<-rbind(accuracy(as.vector(stlm_model$mean) , msts_test),
accuracy(as.vector(exp(tbats_model$mean)) , msts_test))
rownames(result) <- c("stlm_model","tbats_model")
result
accuracyData <- data.frame(datetime= traffic$datetime %>% tail(24*7),
actual = as.vector(msts_test) ,
stlmForecast = as.vector(stlm_model$mean) ,
tbatsForecast = as.vector(exp(tbats_model$mean))
)
accuracyData %>%
ggplot() +
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = (pjm$cons %>% tail(24*7)), colour = "actual"))+
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = stlm_model$mean, colour = "stlm"))+
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = exp(tbats_model$mean),   colour = "tbats "))+
scale_y_continuous(labels = comma)+
labs(
title = "Forecast from STLM and TBATS model",
y = "Number of Traffic",
x = "Date",
colour = ""
)
tbats_mod <- msts_train %>%
log() %>%
tbats(use.box.cox = TRUE)
tbats_model <-  forecast(tbats_mod,h=24*7)
plot(tbats_model)
result<-rbind(accuracy(as.vector(stlm_model$mean) , msts_test),
accuracy(as.vector(exp(tbats_model$mean)) , msts_test))
rownames(result) <- c("stlm_model","tbats_model")
result
?tbats
tbats_mod <- msts_train %>%
log() %>%
tbats(use.box.cox = FALSE, use.trend = TRUE)
tbats_model <-  forecast(tbats_mod,h=24*7)
plot(tbats_model)
result<-rbind(accuracy(as.vector(stlm_model$mean) , msts_test),
accuracy(as.vector(exp(tbats_model$mean)) , msts_test))
rownames(result) <- c("stlm_model","tbats_model")
result
tbats_mod <- msts_train %>%
log() %>%
tbats(use.box.cox = FALSE, use.trend = TRUE, use.damped.trend = T, biasadj = T)
tbats_model <-  forecast(tbats_mod,h=24*7)
plot(tbats_model)
result<-rbind(accuracy(as.vector(stlm_model$mean) , msts_test),
accuracy(as.vector(exp(tbats_model$mean)) , msts_test))
rownames(result) <- c("stlm_model","tbats_model")
result
accuracyData <- data.frame(datetime= traffic$datetime %>% tail(24*7),
actual = as.vector(msts_test) ,
stlmForecast = as.vector(stlm_model$mean) ,
tbatsForecast = as.vector(exp(tbats_model$mean))
)
accuracyData %>%
ggplot() +
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = (pjm$cons %>% tail(24*7)), colour = "actual"))+
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = stlm_model$mean, colour = "stlm"))+
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = exp(tbats_model$mean),   colour = "tbats "))+
scale_y_continuous(labels = comma)+
labs(
title = "Forecast from STLM and TBATS model",
y = "Number of Traffic",
x = "Date",
colour = ""
)
tbats_mod <- msts_train %>%
log() %>%
tbats(use.box.cox = FALSE, use.trend = TRUE, biasadj = T)
tbats_model <-  forecast(tbats_mod,h=24*7)
plot(tbats_model)
result<-rbind(accuracy(as.vector(stlm_model$mean) , msts_test),
accuracy(as.vector(exp(tbats_model$mean)) , msts_test))
rownames(result) <- c("stlm_model","tbats_model")
result
tbats_mod <- msts_train %>%
log() %>%
tbats(use.box.cox = FALSE, use.trend = TRUE, use.damped.trend = TRUE)
tbats_model <-  forecast(tbats_mod,h=24*7)
plot(tbats_model)
result<-rbind(accuracy(as.vector(stlm_model$mean) , msts_test),
accuracy(as.vector(exp(tbats_model$mean)) , msts_test))
rownames(result) <- c("stlm_model","tbats_model")
result
accuracyData <- data.frame(datetime= traffic$datetime %>% tail(24*7),
actual = as.vector(msts_test) ,
stlmForecast = as.vector(stlm_model$mean) ,
tbatsForecast = as.vector(exp(tbats_model$mean))
)
tbats_mod <- msts_train %>%
log() %>%
tbats(use.box.cox = FALSE, use.damped.trend = TRUE)
tbats_mod <- msts_train %>%
log() %>%
tbats(use.box.cox = FALSE, use.trend = TRUE, use.damped.trend = TRUE)
tbats_model <-  forecast(tbats_mod,h=24*7)
plot(tbats_model)
result<-rbind(accuracy(as.vector(stlm_model$mean) , msts_test),
accuracy(as.vector(exp(tbats_model$mean)) , msts_test))
rownames(result) <- c("stlm_model","tbats_model")
result
accuracyData <- data.frame(datetime= traffic$datetime %>% tail(24*7),
actual = as.vector(msts_test) ,
stlmForecast = as.vector(stlm_model$mean) ,
tbatsForecast = as.vector(exp(tbats_model$mean))
)
accuracyData %>%
ggplot() +
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = (pjm$cons %>% tail(24*7)), colour = "actual"))+
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = stlm_model$mean, colour = "stlm"))+
geom_line(aes(x = (pjm$datetime %>% tail(24*7)), y = exp(tbats_model$mean),   colour = "tbats "))+
scale_y_continuous(labels = comma)+
labs(
title = "Forecast from STLM and TBATS model",
y = "Number of Traffic",
x = "Date",
colour = ""
)
